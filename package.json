{
  "name": "project-planning",
  "version": "1.0.1",
  "description": "Plan & Track projects",
  "repository": "<Add your repository here>",
  "license": "UNLICENSED",
  "private": true,
  "--engines": {
    "node": ">=14.15.5 <15"
  },
  "dependencies": {
    "@azure/msal-node": "^1.9.0",
    "@microsoft/microsoft-graph-client": "^3.0.2",
    "@sap/audit-logging": "^5.5.3",
    "@sap/cds": "^5.9.6",
    "@sap/cds-odata-v2-adapter-proxy": "1.8.19",
    "@sap/xsenv": "3.2.2",
    "@sap/xssec": "^3.2.13",
    "@sapmentors/cds-scp-api": "github:sapmentors/cds-scp-api",
    "@ui5/cli": "^2.14.9",
    "axios": "^0.27.2",
    "azure-devops-node-api": "^11.1.1",
    "cds-dbm": "0.0.36",
    "cds-pg": "0.1.28",
    "cdse": "^1.1.12",
    "dotenv": "^16.0.1",
    "express": "^4.18.1",
    "express-openid-connect": "^2.7.2",
    "hdb": "^0.19.2",
    "isomorphic-fetch": "^3.0.0",
    "jsonwebtoken": "^8.5.1",
    "moment": "^2.29.3",
    "msal": "^1.4.16",
    "passport": "^0.6.0",
    "sap-cf-axios": "^0.3.5",
    "simple-oauth2": "^4.3.0",
    "uuid": "^8.3.2",
    "yargs": "^17.5.1",
    "cds-msal-auth": "git+https://github.com/BenediktHoelker/cds-msal-auth.git"
  },
  "devDependencies": {
    "@sap/approuter": "^11.0.1",
    "@sap/eslint-plugin-cds": "^2.3.5",
    "@sap/hdi-deploy": "^4.3.3",
    "@sap/ux-specification": "^1.100.2",
    "copyfiles": "^2.4.1",
    "eslint": "^8.16.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jsx-a11y": "^6.5.1",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-react": "^7.30.0",
    "eslint-plugin-react-hooks": "^4.5.0",
    "local-web-server": "^5.2.1",
    "npm-run-all": "^4.1.5",
    "open-cli": "^7.0.1",
    "sqlite3": "^5.0.8",
    "ui5-middleware-simpleproxy": "^0.8.4",
    "ui5-task-zipper": "^0.4.13"
  },
  "ui5": {
    "dependencies": [
      "ui5-task-zipper",
      "ui5-middleware-simpleproxy"
    ]
  },
  "scripts": {
    "start": "cds run",
    "start:all": "run-p start serve:ws",
    "start:all:auth:display": "run-p start:srv start:approuter start:app start:auth display:app",
    "start:srv:hybrid": "cds run --profile test",
    "start:hybrid": "run-p start:srv:hybrid start:approuter start:app",
    "start:app": "ui5 serve --config=ui5.yaml",
    "start:approuter": "node node_modules/@sap/approuter/approuter.js",
    "start:auth": "open-cli http://localhost:5000",
    "serve:ui5": "ui5 serve",
    "serve:ws": "ws --compress -d dist",
    "display:app": "ui5 serve -o fiori.html",
    "docker:start:pg": "docker-compose -f docker-compose.yaml up -d",
    "debug": "run-p start:srv start:app",
    "lint": "eslint srv && eslint app",
    "build": "cds build --production",
    "build:mbt": "mbt build",
    "build:ui5": "ui5 build --dest dist",
    "build:srv": "mbt module-build -m project-planning-srv -g -r project-planning-db,project-planning-destinations",
    "--build:ui": "mbt module-build -m fiori-azdev-workitems,fiori-customers,fiori-single-planning-calendar -g",
    "build:ui": "npm-run-all build:ui:*",
    "build:ui:azdev-workitems": "rimraf dist/azdev-workitems && mkdirp -p dist/azdev-workitems && npm run build --prefix app/azdev-workitems && cp -r app/azdev-workitems/dist/* dist/azdev-workitems",
    "build:ui:customers": "rimraf dist/customers && mkdirp -p dist/customers && npm run build --prefix app/customers && cp -r app/customers/dist/* dist/customers",
    "build:ui:projects-odata-v2": "rimraf dist/projects-odata-v2 && mkdirp -p dist/projects-odata-v2 && npm run build --prefix app/projects-odata-v2 && cp -r app/projects-odata-v2/dist/* dist/projects-odata-v2",
    "build:ui:single-planning-calendar": "rimraf dist/single-planning-calendar && mkdirp -p dist/single-planning-calendar && npm run build --prefix app/single-planning-calendar && cp -r app/single-planning-calendar/dist/* dist/single-planning-calendar",
    "build:ui:users": "rimraf dist/users && mkdirp -p dist/users && npm run build --prefix app/users && cp -r app/users/dist/* dist/users",
    "build:ui:workitems-iot": "rimraf dist/workitems-iot && mkdirp -p dist/workitems-iot && npm run build --prefix app/workitems-iot && cp -r app/workitems-iot/dist/* dist/workitems-iot",
    "build:ui:workitems-alp": "rimraf dist/workitems-alp && mkdirp -p dist/workitems-alp && npm run build --prefix app/workitems-alp && cp -r app/workitems-alp/dist/* dist/workitems-alp",
    "build:ui:workitems-display": "rimraf dist/workitems-display && mkdirp -p dist/workitems-display && npm run build --prefix app/workitems-display && cp -r app/workitems-display/dist/* dist/workitems-display",
    "deploy": "cf deploy mta_archives/%npm_package_name%_%npm_package_version%.mtar -f",
    "release": "npm run build && npm run deploy",
    "copy:db:template": "copyfiles -u 1 -a ./db-deployer-apt/* ./db-deployer-apt/**/* gen/db",
    "deploy:ui": "cf deploy mta_archives/%npm_package_name%_%npm_package_version%.mtar ^ -m project-planning-ui-deployer",
    "deploy:srv": "npm run build:srv && cf deploy -m project-planning-srv",
    "deploy:db": "cf deploy -m project-planning-db-deployer -r project-planning-db",
    "deploy:pg:full": "npx cds-dbm deploy --create-db --load-via full",
    "deploy:pg": "npx cds-dbm deploy --load-via delta",
    "undeploy": "cf undeploy project-planning --delete-service-keys --delete-services"
  },
  "files": [
    "db",
    "srv",
    "app"
  ],
  "cds": {
    "requires": {
      "auth": {
        "impl": "cds-msal-auth"
      },
      "[development]": {
        "auth": {
          "kind": "dummy-auth"
        }
      },
      "[test]": {
        "auth": {
          "kind": "jwt-auth"
        }
      },
      "[production]": {
        "auth": {
          "kind": "jwt-auth"
        }
      },
      "db": {
        "kind": "database",
        "[development]": {
          "kind": "database"
        },
        "[postgres]": {
          "kind": "database"
        },
        "[test]": {
          "kind": "sqlite"
        },
        "[production]": {
          "kind": "database"
        }
      },
      "database": {
        "dialect": "plain",
        "impl": "cds-pg",
        "model": [
          "srv"
        ]
      },
      "uaa": {
        "[heroku]": {},
        "kind": "xsuaa"
      }
    },
    "migrations": {
      "db": {
        "schema": {
          "default": "public",
          "clone": "_cdsdbm_clone",
          "reference": "_cdsdbm_ref"
        },
        "deploy": {
          "tmpFile": "tmp/_autodeploy.json",
          "undeployFile": "db/undeploy.json"
        }
      }
    },
    "build": {
      "tasks": [
        {
          "for": "node-cf",
          "src": "srv",
          "options": {
            "model": [
              "db",
              "srv",
              "app"
            ]
          }
        },
        {
          "use": "cds-dbm/dist/build/postgres-cf",
          "for": "postgres-cf",
          "src": "db",
          "options": {
            "deployCmd": "npx cds-dbm deploy --load-via delta --auto-undeploy"
          }
        }
      ]
    }
  }
}
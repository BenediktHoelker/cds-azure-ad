sap.ui.define(["./BaseController","./ErrorParser","sap/ui/model/Filter","../model/formatter","sap/ui/model/json/JSONModel","../model/legendItems","sap/m/MessageBox","sap/m/MessageToast"],function(t,e,n,o,s,r,a,i){function c(t,e){const n=new Date(t);n.setDate(n.getDate()+e);return n}function l(){const t=new Date((new Date).setHours(0,0,0,1));const e=t.getDay();const n=t.getDate()-e+(e==0?-6:1);return new Date(t.setDate(n))}const p=["customerSelect","projectSelect","packageSelect"];return t.extend("iot.singleplanningcalendar.controller.SinglePlanningCalendar",{formatter:o,onInit:async function(){const t=this.getResourceBundle();const n=this.byId("SPCalendar");const o=n.getViews()[1];const c=this.byId("createItemDialog");const p=new s({appointments:{NEW:{}},busy:false,customers:[],projects:[],get projectsFiltered(){const t=c.getBindingContext();if(!t)return[];const e=t.getProperty("customer_ID");if(!e)return[];return this.projects.filter(({customer_ID:t})=>t===e)},workPackages:[],get workPackagesFiltered(){const t=c.getBindingContext();if(!t)return[];const e=t.getProperty("project_ID");if(!e)return[];return this.workPackages.filter(({project_ID:t})=>t===e)},legendItems:Object.entries(r.getItems()).map(([e,{type:n}])=>({text:t.getText(`legendItems.${e}`),type:n}))});n.setSelectedView(o);n.setStartDate(l());p.setSizeLimit(300);this.setModel(p);await this.getModel("OData").metadataLoaded();try{await Promise.all([this._loadAppointments(),this._loadCustomersAndProjects()])}catch(t){a.error(e.parse(t))}$(document).keydown(e=>{const n=$(document.activeElement)&&$(document.activeElement).control()[0]&&$(document.activeElement).control()[0].getId();if(e.ctrlKey){if(e.keyCode===13&&!this.byId("submitButton").getEnabled()){i.show(t.getText("appointmentDialog.invalidInput"));return}if(e.keyCode===13&&n&&!n.includes("submitButton")){e.preventDefault();this.onSubmitEntry()}else if(e.keyCode===46){e.preventDefault();const t=sap.ui.getCore().byId(n);const o=t.getBindingContext().getObject();this._deleteAppointment(o)}}})},onAfterOpenDialog(){this._refreshSelectControls()},_getSelectControls(){return p.map(t=>this.byId(t))},_refreshSelectControls(){this._getSelectControls().forEach(t=>t.getBinding("items").refresh())},onSelectCustomer(t){const e=this.getModel();const n=t.getParameter("selectedItem");if(!n)return;const o=n.getBindingContext().getProperty("friendlyID");const s=t.getSource().getBindingContext().getPath();e.setProperty(s+"/customer_friendlyID",o)},onDisplayLegend(){this.byId("legendDialog").open()},onPressAppointment(t){const{appointment:e}=t.getParameters();if(e){this._bindAndOpenDialog(e.getBindingContext().getPath())}},async onEditAppointment(t){const n=this.getModel();const{appointments:o}=n.getData();const{startDate:s,endDate:r,appointment:i,copy:c}=t.getParameters();const l=i.getBindingContext();const p=l.getObject();let g=l.getPath();if(c){g="/appointments/NEW";n.setProperty("/appointments/NEW",i)}n.setProperty(g+"/activatedDate",s);n.setProperty(g+"/completedDate",r);if(!p.customer_ID||!p.project_ID){this._bindAndOpenDialog(g);return}try{const t=await this._submitEntry({...p,activatedDate:s,completedDate:r});o[t.ID]=t;n.setProperty("/appointments",o)}catch(t){a.error(e.parse(t))}},async _deleteAppointment(t){const n=this.getModel();const{appointments:o}=n.getData();n.setProperty("/dialogBusy",true);try{await this.remove({path:`/MyWorkItems(ID='${encodeURIComponent(t.ID)}')`,data:t});delete o[t.ID];this._closeDialog("createItemDialog")}catch(t){a.error(e.parse(t))}n.setProperty("/dialogBusy",false)},onPressDeleteAppointment(t){const e=t.getSource().getBindingContext().getObject();this._deleteAppointment(e)},async onPressResetAppointment(t){const n=this.getModel();const{appointments:o}=n.getData();const s=t.getSource().getBindingContext().getObject();n.setProperty("/dialogBusy",true);try{const t=await this.reset({path:`/MyWorkItems(ID='${encodeURIComponent(s.ID)}')`,appointment:s});o[t.ID]=t;this._closeDialog("createItemDialog")}catch(t){a.error(e.parse(t))}n.setProperty("/dialogBusy",false)},onCreateAppointment(t){this._createAppointment(t);this._bindAndOpenDialog("/appointments/NEW")},_createAppointment(t){const e=this.getModel();const{startDate:n,endDate:o}=t.getParameters();const s={activatedDate:n,completedDate:o};e.setProperty("/appointments/NEW",s)},_bindAndOpenDialog(t){const e=this.getModel();const n=this.getResourceBundle();const o=e.getProperty(t);const s=this.byId("createItemDialog");e.setProperty("/createItemDialogTitle",o.ID?n.getText("editAppointment"):n.getText("createAppointment"));s.bindElement(t);s.open()},async onSubmitEntry(){const t=this.getModel();const n=this.byId("createItemDialog").getBindingContext().getObject();let{appointments:o}=t.getData();t.setProperty("/dialogBusy",true);const s=this.byId("projectSelect");const r=this.byId("packageSelect");n.project_ID=s.getItems().length>0?s.getSelectedKey():null;n.workPackage_ID=r.getItems().length>0?r.getSelectedKey():null;try{const e=await this._submitEntry(n);o[e.ID]=e;o["NEW"]={};t.setProperty("/appointments",o)}catch(t){a.error(e.parse(t))}t.setProperty("/dialogBusy",false);this._closeDialog("createItemDialog")},_submitEntry(t){const{ID:e}=t;if(e){const e=`/MyWorkItems(ID='${encodeURIComponent(t.ID)}')`;return this.update({path:e,data:t})}else{return this.create({path:"/MyWorkItems",data:t})}},onAfterCloseDialog(){const t=this.byId("createItemDialog").getBindingContext().getObject();if(!t||!t.ID)this.getModel().setProperty("/appointments/NEW",{});this.byId("createItemDialog").unbindElement()},onCloseDialog(t){t.getSource().getParent().close()},_closeDialog(t){this.byId(t).close()},onChangeView:function(){this._loadAppointments()},onStartDateChange:function(){this._loadAppointments()},_getCalendarEndDate(){const t=this.byId("SPCalendar");const e=t.getStartDate();const n=t._getSelectedView().getKey();const o={Day:1,WorkWeek:5,Week:7,Month:31};const s=o[n];const r=c(e,s);return r},async _loadAppointments(){const t=this.getModel();const e=this.byId("SPCalendar");const o=t.getProperty("/appointments");const s=e.getStartDate();const r=this._getCalendarEndDate();t.setProperty("/busy",true);const{results:a}=await this.read({path:"/MyWorkItems",urlParameters:{$top:100},filters:[new n({filters:[new n({path:"completedDate",operator:"GT",value1:s}),new n({path:"activatedDate",operator:"LE",value1:r})],and:true})]});const i=a.reduce((t,e)=>{t[e.ID]=e;return t},{});t.setProperty("/appointments",{...o,...i});t.setProperty("/busy",false)},async _loadCustomersAndProjects(){const t=this.getModel();const e=await this._getUserInfoService();t.setProperty("/busy",true);const o=e&&e.getEmail()?e.getEmail():"benedikt.hoelker@iot-online.de";const{results:s}=await this.read({path:"/Users2Projects",filters:[new n({path:"user_userPrincipalName",operator:"EQ",value1:o})],urlParameters:{$expand:"project/customer,project/workPackages"}});let r=[];let a=[];let i=[];s.forEach(({project:t})=>{a.push(t);r.push(t.customer);i.push(...t.workPackages.results)});t.setProperty("/customers",[...new Map(r.map(t=>[t.ID,t])).values()]);t.setProperty("/projects",a);t.setProperty("/workPackages",i);t.setProperty("/busy",false)},_getUserInfoService:function(){return new Promise(t=>sap.ui.require(["sap/ushell/library"],e=>{const n=e.Container;if(!n)return t();const o=n.getServiceAsync("UserInfo");return t(o)}))}})});
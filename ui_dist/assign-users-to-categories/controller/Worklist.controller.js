sap.ui.define(["./BaseController","sap/ui/model/json/JSONModel","../model/formatter","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/model/FilterType","sap/m/Token"],(e,t,o,s,n,r,i)=>e.extend("iot.planner.assignuserstocategories.controller.Worklist",{formatter:o,onInit(){this._aTableSearchState=[];const e=new t({worklistTableTitle:this.getResourceBundle().getText("worklistTableTitle"),tableNoDataText:this.getResourceBundle().getText("tableNoDataText")});this.setModel(e,"worklistView")},onUpdateFinished(e){let t;const o=e.getSource();const s=e.getParameter("total");if(s&&o.getBinding("items").isLengthFinal()){t=this.getResourceBundle().getText("worklistTableTitleCount",[s])}else{t=this.getResourceBundle().getText("worklistTableTitle")}this.getModel("worklistView").setProperty("/worklistTableTitle",t)},onPress(e){this._showObject(e.getSource())},onNavBack(){history.go(-1)},onRefresh(){const e=this.byId("table");e.getBinding("items").refresh()},_showObject(e){this.getRouter().navTo("object",{objectId:e.getBindingContext().getPath().substring("/Categories".length)})},_applySearch(e){const t=this.byId("table");const o=this.getModel("worklistView");t.getBinding("items").filter(e,"Application");if(e.length!==0){o.setProperty("/tableNoDataText",this.getResourceBundle().getText("worklistNoDataWithSearchText"))}},onSearch(e){const{query:t}=e.getParameters();const o=[new s({path:"title",operator:"Contains",value1:t})];this.byId("treeTable").getBinding("rows").filter(o,r.Application)},onCreateToken(e){const t=e.getSource();const{value:o}=e.getParameters();const s=new i({text:o});t.addToken(s);t.setValue();t.fireTokenUpdate({addedTokens:[s]})},onUpdateTags(e){const t=this.getModel();const{addedTokens:o=[],removedTokens:s=[]}=e.getParameters();this._removeDuplicateTokens(e.getSource());o.forEach(e=>{const o=e.getText();const s=e.getBindingContext().getProperty("ID");t.createEntry("/Tags",{properties:{title:o}});t.createEntry("/Tags2Categories",{properties:{tag_title:o,category_ID:s}})});s.forEach(e=>{const o=e.getBindingContext().getPath();t.remove(o)});t.submitChanges()},_removeDuplicateTokens(e){const t=e.getTokens();const o={};t.forEach(e=>{const t=e.getText();o[t]=e});e.setTokens(Object.values(o))},onUpdateUsers2Categories(e){const t=this.getModel();const{addedTokens:o=[],removedTokens:s=[]}=e.getParameters();this._removeDuplicateTokens(e.getSource());o.forEach(e=>{const o=e.getKey();const s=e.getBindingContext().getProperty("ID");t.createEntry("/Users2Categories",{properties:{category_ID:s,user_userPrincipalName:o}})});s.forEach(e=>{const o=e.getBindingContext().getPath();t.remove(o)});t.submitChanges()},onDeleteToken(e){const t=e.getSource().getBindingContext().getPath();this.getModel().remove(t)}}));
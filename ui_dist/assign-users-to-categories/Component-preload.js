//@ui5-bundle iot/planner/assignuserstocategories/Component-preload.js
jQuery.sap.registerPreloadedModules({
"version":"2.0",
"modules":{
	"iot/planner/assignuserstocategories/Component.js":function(){sap.ui.define(["sap/ui/core/UIComponent","./CustomODataV2Model","sap/ui/Device","./model/models","./controller/ErrorHandler"],(t,e,s,i,o)=>t.extend("iot.planner.assignuserstocategories.Component",{metadata:{manifest:"json"},init(...s){t.prototype.init.apply(this,...s);this._oErrorHandler=new o(this);this.setModel(new e("/v2/admin/"));this.setModel(i.createDeviceModel(),"device");this.getRouter().initialize()},destroy(){this._oErrorHandler.destroy();t.prototype.destroy.apply(this,arguments)},getContentDensityClass(){if(this._sContentDensityClass===undefined){if(document.body.classList.contains("sapUiSizeCozy")||document.body.classList.contains("sapUiSizeCompact")){this._sContentDensityClass=""}else if(!s.support.touch){this._sContentDensityClass="sapUiSizeCompact"}else{this._sContentDensityClass="sapUiSizeCozy"}}return this._sContentDensityClass}}));
},
	"iot/planner/assignuserstocategories/CustomODataV2Model.js":function(){sap.ui.define(["sap/ui/model/odata/v2/ODataModel","sap/ui/model/json/JSONModel"],(t,e)=>{function s(t,e,s){return function(...a){return new Promise((n,r)=>{const i=a[s]||{};const o=[...a];o[s]={...i,success:n,error:r};t[e](...o)})}}return e.extend("iot.ODataModelV2",{constructor:function(a,...n){e.apply(this,...n);const r=new t(a);r.metadataLoaded().then(()=>{[this.schema]=r.getServiceMetadata().dataServices.schema;this.associations=this.schema.association;this.entityTypes=this.schema.entityType.map(({name:t,property:e,key:s,navigationProperty:a})=>({name:t,keys:s.propertyRef.map(t=>t.name),properties:e,relations:a.map(({name:t,relationship:e,fromRole:s,toRole:a})=>{const n=this.associations.find(({name:t})=>`${this.schema.namespace}.${t}`===e);const{referentialConstraint:{dependent:r,principal:i},end:o}=n;return{name:t,fromRole:s,toRole:a,cardinality:o.find(t=>t.role===a).multiplicity,refConstraints:r.propertyRef.map((t,e)=>{const n=i.propertyRef[e];return{from:(r.role===s?t:n).name,to:(r.role===a?t:n).name}})}})}));this.setData(this.entityTypes.map(({name:t})=>t).reduce((t,e)=>({...t,[e]:[]}),{}))});this.serviceURL=a;this.odata={create:s(r,"create",2),read:s(r,"read",1),query:s(r,"read",1),update:s(r,"update",2),remove:s(r,"remove",1),callFunction:s(r,"callFunction",1)}},async create(...t){const e=await this.odata.create(...t);const[s]=t;const a=this.getProperty(s);a.push(e);this.setProperty(s,a);this.nest()},async read(...t){const{results:e}=await this.odata.read(...t);return e},async load(...t){const{results:e}=await this.odata.read(...t);const[s,a]=t;const n=s.slice(1);const r=this.entityTypes.find(({name:t})=>t===n);const i=a?.urlParameters?.$expand;if(i.includes("/")){throw new Error("Deep expand is not supported.")}if(i){const t=i.split(",");t.forEach(t=>{const s=r.relations.find(({name:e})=>e===t);const a=s.toRole;const n=this.getProperty(`/${a}`);let i=[];e.forEach(e=>{const a=s.cardinality==="1"?e[t]:e[t].results;i=[...i,...a]});const o=[...new Set([...i,...n])];this.setProperty(`/${a}`,o)})}this.setProperty(s,e);this.nest()},async update({...t}){const e=`/${t.__metadata.uri.replace(location.origin,"").replace(this.serviceURL,"")}`;const s=e.split("(")[0].slice(1);const a=this.entityTypes.find(({name:t})=>t===s);const n=this.getProperty(`/${s}`);a.relations.forEach(({name:e})=>{delete t[e]});const r=n.findIndex(e=>a.keys.every(s=>e[s]===t[s]));const i=`/${s}/${r}`;await this.odata.update(e,t);this.setProperty(i,t);this.nest()},async remove(t){const e=`/${t.__metadata.uri.replace(location.origin,"").replace(this.serviceURL,"")}`;const s=e.split("(")[0];await this.odata.remove(e);const a=this.getProperty(s).filter(t=>!t.__metadata.uri.includes(e));this.setProperty(s,a);this.nest()},nest(){const t=this.getData();const{entityTypes:e}=this;e.filter(({name:e})=>t[e]).map(e=>({entityType:e,entities:t[e.name].filter(Boolean).map(t=>{e.relations.forEach(e=>{const s=e.cardinality.endsWith("1")?"1":"n";Object.defineProperty(t,e.name,{configurable:true,get:()=>{const a=this.getData()[e.toRole]||[];const n=a.filter(s=>e.refConstraints.every(({to:e,from:a})=>s[e]===t[a]));if(s==="1"){return n[0]}return n}})});return t})})).forEach(({entityType:t,entities:e})=>{this.setProperty(`/${t.name}`,e)})}})});
},
	"iot/planner/assignuserstocategories/ShadowModel.js":function(){sap.ui.define(["sap/ui/model/json/JSONModel"],t=>{const e=(t,r=null,n="children",o="parent_ID")=>t.filter(t=>t[o]===r).map(r=>({...r,[n]:e(t,r.ID)}));const r=(t,e,n="children")=>t.reduce((t,o)=>{const i={...t,[o.__metadata.uri]:{...o,key:o.__metadata.uri}};if(e){t[n]=r(o[n])}return i},{});return t.extend("iot.ShadowModel",{constructor:function(...e){t.apply(this,...e)},setPropertyExt(...t){this.setProperty(...t)}})});
},
	"iot/planner/assignuserstocategories/controller/App.controller.js":function(){sap.ui.define(["./BaseController"],e=>e.extend("iot.planner.assignuserstocategories.controller.App",{onInit(){this.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass())}}));
},
	"iot/planner/assignuserstocategories/controller/BaseController.js":function(){sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/core/UIComponent","sap/m/library"],(e,t,r)=>{const{URLHelper:o}=r;return e.extend("iot.planner.assignuserstocategories.controller.BaseController",{getRouter(){return t.getRouterFor(this)},getModel(e){return this.getView().getModel(e)||this.getOwnerComponent().getModel(e)},setModel(e,t){return this.getView().setModel(e,t)},async read({path:e,...t}){return new Promise((r,o)=>{this.getModel("OData").read(e,{...t,success:r,error:o})})},async create({path:e,data:t}){return new Promise((r,o)=>{this.getModel("OData").create(e,t,{success:r,error:o})})},getResourceBundle(){return this.getOwnerComponent().getModel("i18n").getResourceBundle()},onShareEmailPress(){const e=this.getModel("objectView")||this.getModel("worklistView");o.triggerEmail(null,e.getProperty("/shareSendEmailSubject"),e.getProperty("/shareSendEmailMessage"))}})});
},
	"iot/planner/assignuserstocategories/controller/ErrorHandler.js":function(){sap.ui.define(["sap/ui/base/Object","sap/m/MessageBox","sap/ui/model/Filter","sap/ui/model/FilterOperator"],(e,s,t,o)=>e.extend("iot.planner.assignuserstocategories.controller.ErrorHandler",{constructor:function(e){const s=sap.ui.getCore().getMessageManager();const n=s.getMessageModel();const r=e.getModel("i18n").getResourceBundle();const i=r.getText("errorText");const a=r.getText("multipleErrorsText");this._oComponent=e;this._bMessageOpen=false;this.oMessageModelBinding=n.bindList("/",undefined,[],new t("technical",o.EQ,true));this.oMessageModelBinding.attachChange(function(e){const t=e.getSource().getContexts();const o=[];if(this._bMessageOpen||!t.length){return}t.forEach(e=>{o.push(e.getObject())});s.removeMessages(o);const n=o.length===1?i:a;this._showServiceError(n,o[0].message)},this)},_showServiceError(e,t){this._bMessageOpen=true;s.error(e,{id:"serviceErrorMessageBox",details:t,styleClass:this._oComponent.getContentDensityClass(),actions:[s.Action.CLOSE],onClose:function(){this._bMessageOpen=false}.bind(this)})}}));
},
	"iot/planner/assignuserstocategories/controller/NotFound.controller.js":function(){sap.ui.define(["./BaseController"],e=>e.extend("iot.planner.assignuserstocategories.controller.NotFound",{onLinkPressed(){this.getRouter().navTo("worklist")}}));
},
	"iot/planner/assignuserstocategories/controller/Object.controller.js":function(){sap.ui.define(["./BaseController","sap/ui/model/json/JSONModel","sap/ui/core/routing/History","../model/formatter"],(e,t,s,o)=>e.extend("iot.planner.assignuserstocategories.controller.Object",{formatter:o,onInit(){const e=new t({busy:true,delay:0});this.getRouter().getRoute("object").attachPatternMatched(this._onObjectMatched,this);this.setModel(e,"objectView")},onNavBack(){const e=s.getInstance().getPreviousHash();if(e!==undefined){history.go(-1)}else{this.getRouter().navTo("worklist",{},true)}},_onObjectMatched(e){const t=e.getParameter("arguments").objectId;this._bindView(`/Categories${t}`)},_bindView(e){const t=this.getModel("objectView");this.getView().bindElement({path:e,events:{change:this._onBindingChange.bind(this),dataRequested(){t.setProperty("/busy",true)},dataReceived(){t.setProperty("/busy",false)}}})},_onBindingChange(){const e=this.getView();const t=this.getModel("objectView");const s=e.getElementBinding();if(!s.getBoundContext()){this.getRouter().getTargets().display("objectNotFound");return}const o=this.getResourceBundle();const n=e.getBindingContext().getObject();const i=n.title;const a=n.Categories;t.setProperty("/busy",false);t.setProperty("/shareSendEmailSubject",o.getText("shareSendEmailObjectSubject",[i]));t.setProperty("/shareSendEmailMessage",o.getText("shareSendEmailObjectMessage",[a,i,location.href]))}}));
},
	"iot/planner/assignuserstocategories/controller/Worklist.controller.js":function(){sap.ui.define(["./BaseController","sap/ui/model/json/JSONModel","../model/formatter","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/model/FilterType","sap/m/Token"],(e,t,o,s,r,n,i)=>e.extend("iot.planner.assignuserstocategories.controller.Worklist",{formatter:o,onInit(){this._aTableSearchState=[];const e=new t({worklistTableTitle:this.getResourceBundle().getText("worklistTableTitle"),tableNoDataText:this.getResourceBundle().getText("tableNoDataText"),newCategory:{}});this.setModel(e,"worklistView")},async onBeforeRendering(){const e=this.getModel();await this.getModel().load("/Categories",{urlParameters:{$expand:"members,tags"}});const t=e.getProperty("/Categories");const o=t.filter(({parent_ID:e})=>!e);e.setProperty("/categoriesLevel0",o)},onUpdateFinished(e){let t;const o=e.getSource();const s=e.getParameter("total");if(s&&o.getBinding("items").isLengthFinal()){t=this.getResourceBundle().getText("worklistTableTitleCount",[s])}else{t=this.getResourceBundle().getText("worklistTableTitle")}this.getModel("worklistView").setProperty("/worklistTableTitle",t)},onPressAddCategory(e){const t=this.getModel("worklistView");const o=e.getSource().getParent();const s=o.getBindingContext().getProperty("ID");const r=this.byId("editCategoryPopover");this.getModel().setProperty("/newCategory",{parent_ID:s});t.setProperty("/popoverTitle",this.getResourceBundle().getText("popoverTitle.createCategory"));r.bindElement("/newCategory");r.openBy(o)},onPressUpdateCategory(e){const t=e.getSource().getParent();const o=this.byId("editCategoryPopover");this.getModel("worklistView").setProperty("/popoverTitle",this.getResourceBundle().getText("popoverTitle.editCategory"));o.bindElement(t.getBindingContext().getPath());o.openBy(t)},async onChangeCategory(e){const t=e.getSource().getBindingContext().getObject();await this.getModel().update(t)},async onPressSubmitCategory(e){const t=this.getModel();const o=e.getSource();const s=o.getBindingContext().getObject();this._closePopover();if(s.ID){await t.update(s)}else{await t.create("/Categories",s)}},onPressClosePopover(){this._closePopover()},_closePopover(){const e=this.byId("editCategoryPopover");this.getModel().setProperty("/newCategory",{});e.close()},onPressDeleteCategory(e){const t=e.getSource().getBindingContext().getObject();this.getModel().remove(t)},onPress(e){this._showObject(e.getSource())},onNavBack(){history.go(-1)},onRefresh(){const e=this.byId("table");e.getBinding("items").refresh()},_showObject(e){this.getRouter().navTo("object",{objectId:e.getBindingContext().getPath().substring("/Categories".length)})},_applySearch(e){const t=this.byId("table");const o=this.getModel("worklistView");t.getBinding("items").filter(e,"Application");if(e.length!==0){o.setProperty("/tableNoDataText",this.getResourceBundle().getText("worklistNoDataWithSearchText"))}},onSearch(e){const{query:t}=e.getParameters();const o=[new s({path:"title",operator:"Contains",value1:t})];this.byId("treeTable").getBinding("rows").filter(o,n.Application)},onCreateToken(e){const t=e.getSource();const{value:o}=e.getParameters();const s=new i({text:o});t.addToken(s);t.setValue();t.fireTokenUpdate({addedTokens:[s]})},onUpdateTags(e){const t=this.getModel();const{addedTokens:o=[],removedTokens:s=[]}=e.getParameters();this._removeDuplicateTokens(e.getSource());o.forEach(e=>{const o=e.getText();const s=e.getBindingContext().getProperty("ID");t.create("/Tags",{title:o});t.create("/Tags2Categories",{tag_title:o,category_ID:s})});s.forEach(e=>{const o=e.getBindingContext().getPath();t.remove(o)})},_removeDuplicateTokens(e){const t=e.getTokens();const o={};t.forEach(e=>{const t=e.getText();o[t]=e});e.setTokens(Object.values(o))},onUpdateUsers2Categories(e){const t=this.getModel();const{addedTokens:o=[],removedTokens:s=[]}=e.getParameters();this._removeDuplicateTokens(e.getSource());o.forEach(e=>{const o=e.getKey();const s=e.getBindingContext().getProperty("ID");t.create("/Users2Categories",{category_ID:s,user_userPrincipalName:o})});s.forEach(e=>{const o=e.getBindingContext().getPath();t.remove(o)})},onDeleteToken(e){const t=e.getSource().getBindingContext().getPath();this.getModel().remove(t)}}));
},
	"iot/planner/assignuserstocategories/dot-prop.js":'const isObject=e=>{const t=typeof e;return e!==null&&(t==="object"||t==="function")};const disallowedKeys=new Set(["__proto__","prototype","constructor"]);const digits=new Set("0123456789");function getPathSegments(e){const t=[];let r="";let n="start";let i=false;for(const s of e){switch(s){case"\\\\":if(n==="index"){throw new Error("Invalid character in an index")}if(n==="indexEnd"){throw new Error("Invalid character after an index")}if(i){r+=s}n="property";i=!i;break;case".":if(n==="index"){throw new Error("Invalid character in an index")}if(n==="indexEnd"){n="property";break}if(i){i=false;r+=s;break}if(disallowedKeys.has(r)){return[]}t.push(r);r="";n="property";break;case"[":if(n==="index"){throw new Error("Invalid character in an index")}if(n==="indexEnd"){n="index";break}if(i){i=false;r+=s;break}if(n==="property"){if(disallowedKeys.has(r)){return[]}t.push(r);r=""}n="index";break;case"]":if(n==="index"){t.push(Number.parseInt(r,10));r="";n="indexEnd";break}if(n==="indexEnd"){throw new Error("Invalid character after an index")}default:if(n==="index"&&!digits.has(s)){throw new Error("Invalid character in an index")}if(n==="indexEnd"){throw new Error("Invalid character after an index")}if(n==="start"){n="property"}if(i){i=false;r+="\\\\"}r+=s}}if(i){r+="\\\\"}switch(n){case"property":{if(disallowedKeys.has(r)){return[]}t.push(r);break}case"index":{throw new Error("Index was not closed")}case"start":{t.push("");break}}return t}function isStringIndex(e,t){if(typeof t!=="number"&&Array.isArray(e)){const r=Number.parseInt(t,10);return Number.isInteger(r)&&e[r]===e[t]}return false}function assertNotStringIndex(e,t){if(isStringIndex(e,t)){throw new Error("Cannot use string index")}}function getProperty(e,t,r){if(!isObject(e)||typeof t!=="string"){return r===undefined?e:r}const n=getPathSegments(t);if(n.length===0){return r}for(let t=0;t<n.length;t++){const i=n[t];if(isStringIndex(e,i)){e=t===n.length-1?undefined:null}else{e=e[i]}if(e===undefined||e===null){if(t!==n.length-1){return r}break}}return e===undefined?r:e}function setProperty(e,t,r){if(!isObject(e)||typeof t!=="string"){return e}const n=e;const i=getPathSegments(t);for(let t=0;t<i.length;t++){const n=i[t];assertNotStringIndex(e,n);if(t===i.length-1){e[n]=r}else if(!isObject(e[n])){e[n]=typeof i[t+1]==="number"?[]:{}}e=e[n]}return n}function deleteProperty(e,t){if(!isObject(e)||typeof t!=="string"){return false}const r=getPathSegments(t);for(let t=0;t<r.length;t++){const n=r[t];assertNotStringIndex(e,n);if(t===r.length-1){delete e[n];return true}e=e[n];if(!isObject(e)){return false}}}function hasProperty(e,t){if(!isObject(e)||typeof t!=="string"){return false}const r=getPathSegments(t);if(r.length===0){return false}for(const t of r){if(!isObject(e)||!(t in e)||isStringIndex(e,t)){return false}e=e[t]}return true}function escapePath(e){if(typeof e!=="string"){throw new TypeError("Expected a string")}return e.replace(/[\\\\.[]/g,"\\\\$&")}function entries(e){if(Array.isArray(e)){return e.map((e,t)=>[t,e])}return Object.entries(e)}function stringifyPath(e){let t="";for(let[r,n]of entries(e)){if(typeof n==="number"){t+=`[${n}]`}else{n=escapePath(n);t+=r===0?n:`.${n}`}}return t}function*deepKeysIterator(e,t=[]){if(!isObject(e)){if(t.length>0){yield stringifyPath(t)}return}for(const[r,n]of entries(e)){yield*deepKeysIterator(n,[...t,r])}}sap.ui.define([],()=>({deepKeys(e){return[...deepKeysIterator(e)]}}));',
	"iot/planner/assignuserstocategories/i18n/i18n.properties":'# This is the resource bundle for iot.planner.assignuserstocategories\r\n\r\n#Texts for manifest.json\r\n\r\n#XTIT: Application name\r\nappTitle=Assign users to categories\r\n\r\n#YDES: Application description\r\nappDescription=Assign users to categories and allow access\r\n#~~~ Worklist View ~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n#XTIT: Worklist view title\r\nworklistViewTitle=Manage Categories\r\n\r\n#XTIT: Worklist page title\r\nworklistTitle=Assign users to categories\r\n\r\n#XTIT: Table view title\r\nworklistTableTitle=Categories\r\n\r\n#XTOL: Tooltip for the search field\r\nworklistSearchTooltip=Enter an Categories name or a part of it.\r\n\r\n#XBLI: text for a table with no data with filter or search\r\nworklistNoDataWithSearchText=No matching Categories found\r\n\r\n#XTIT: Table view title with placeholder for the number of items\r\nworklistTableTitleCount=Categories ({0})\r\n\r\n#XTIT: The title of the column containing the title of Categories\r\ntableNameColumnTitle=title\r\n\r\n\r\n#XTIT: The title of the column containing the hierarchyLevel and the unit of measure\r\ntableUnitNumberColumnTitle=hierarchyLevel\r\n\r\n\r\n#XBLI: text for a table with no data\r\ntableNoDataText=No Categories are currently available\r\n\r\n#XLNK: text for link in \'not found\' pages\r\nbackToWorklist=Show Assign users to categories\r\n\r\n#~~~ Object View ~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n#XTIT: Object view title\r\nobjectViewTitle=Categories Details\r\n\r\n#XTIT: Object page title\r\nobjectTitle=Categories\r\n\r\n#XTIT: Label for the title\r\ntitleLabel=title\r\n\r\n\r\n#XTIT: Label for the hierarchyLevel\r\nhierarchyLevelLabel=hierarchyLevel\r\n\r\n\r\n#~~~ Share Menu Options ~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n#XTIT: Send E-Mail subject\r\nshareSendEmailWorklistSubject=<Email subject PLEASE REPLACE ACCORDING TO YOUR USE CASE>\r\n\r\n#YMSG: Send E-Mail message\r\nshareSendEmailWorklistMessage=<Email body PLEASE REPLACE ACCORDING TO YOUR USE CASE>\\r\\n{0}\r\n\r\n#XTIT: Send E-Mail subject\r\nshareSendEmailObjectSubject=<Email subject including object identifier PLEASE REPLACE ACCORDING TO YOUR USE CASE> {0}\r\n\r\n#YMSG: Send E-Mail message\r\nshareSendEmailObjectMessage=<Email body PLEASE REPLACE ACCORDING TO YOUR USE CASE> {0} (id: {1})\\r\\n{2}\r\n\r\n#~~~ Not Found View ~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n#XTIT: Not found view title\r\nnotFoundTitle=Not Found\r\n\r\n#YMSG: The Categories not found text is displayed when there is no Categories with this id\r\nnoObjectFoundText=This Categories is not available\r\n\r\n#YMSG: The Categories not available text is displayed when there is no data when starting the app\r\nnoObjectsAvailableText=No Categories are currently available\r\n\r\n#YMSG: The not found text is displayed when there was an error loading the resource (404 error)\r\nnotFoundText=The requested resource was not found\r\n\r\n#~~~ Error Handling ~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n#YMSG: Error dialog description\r\nerrorText=Sorry, a technical error occurred! Please try again later.\r\n\r\ncategories=Categories\r\nmembers=Members\r\ntags=Tags\r\ntitle=Title\r\nreference=Reference\r\ndescription=Description\r\nOK=OK\r\npopoverTitle.createCategory=New Category\r\npopoverTitle.editCategory=Edit Category',
	"iot/planner/assignuserstocategories/manifest.json":'{"_version":"1.40.0","sap.app":{"id":"iot.planner.assignuserstocategories","type":"application","i18n":"i18n/i18n.properties","applicationVersion":{"version":"0.0.1"},"title":"{{appTitle}}","description":"{{appDescription}}","resources":"resources.json","sourceTemplate":{"id":"@sap-ux/fiori-freestyle-writer:worklist","version":"0.11.15","toolsId":"cc711169-d4ea-4bdb-927d-2108119f4733"},"dataSources":{"mainService":{"uri":"/v2/admin/","type":"OData","settings":{"annotations":[],"localUri":"localService/metadata.xml","odataVersion":"2.0"}}}},"sap.ui":{"technology":"UI5","icons":{"icon":"","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"flexEnabled":false,"dependencies":{"minUI5Version":"1.102.1","libs":{"sap.m":{},"sap.ui.core":{},"sap.f":{},"sap.suite.ui.generic.template":{},"sap.ui.comp":{},"sap.ui.generic.app":{},"sap.ui.table":{},"sap.ushell":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"iot.planner.assignuserstocategories.i18n.i18n"}},"OData":{"dataSource":"mainService","preload":true,"settings":{"defaultUpdateMethod":"MERGE","defaultOperationMode":"Server","defaultBindingMode":"TwoWay","refreshAfterChange":false,"defaultCountMode":"Inline"}}},"resources":{"css":[]},"routing":{"config":{"routerClass":"sap.m.routing.Router","viewType":"XML","viewPath":"iot.planner.assignuserstocategories.view","controlId":"app","controlAggregation":"pages","bypassed":{"target":["notFound"]},"async":true},"routes":[{"pattern":"","name":"worklist","target":["worklist"]},{"pattern":"Categories/{objectId}","name":"object","target":["object"]}],"targets":{"worklist":{"viewName":"Worklist","viewId":"worklist","viewLevel":1,"title":"{i18n>worklistViewTitle}"},"object":{"viewName":"Object","viewId":"object","viewLevel":2,"title":"{i18n>objectViewTitle}"},"objectNotFound":{"viewName":"ObjectNotFound","viewId":"objectNotFound"},"notFound":{"viewName":"NotFound","viewId":"notFound"}}},"rootView":{"viewName":"iot.planner.assignuserstocategories.view.App","type":"XML","async":true,"id":"app"}}}',
	"iot/planner/assignuserstocategories/model/formatter.js":function(){sap.ui.define([],()=>({numberUnit(e){if(!e){return""}return parseFloat(e).toFixed(2)}}));
},
	"iot/planner/assignuserstocategories/model/models.js":function(){sap.ui.define(["sap/ui/model/json/JSONModel","sap/ui/Device"],(e,i)=>({createDeviceModel(){const n=new e(i);n.setDefaultBindingMode("OneWay");return n}}));
},
	"iot/planner/assignuserstocategories/view/App.view.xml":'<mvc:View controllerName="iot.planner.assignuserstocategories.controller.App" displayBlock="true"\r\n    xmlns="sap.m"\r\n    xmlns:mvc="sap.ui.core.mvc"><Shell id="_IDGenShell1"><App id="app" busy="{appView>/busy}" busyIndicatorDelay="{appView>/delay}"/></Shell></mvc:View>',
	"iot/planner/assignuserstocategories/view/NotFound.view.xml":'<mvc:View\r\n    controllerName="iot.planner.assignuserstocategories.controller.NotFound"\r\n    xmlns="sap.m"\r\n    xmlns:mvc="sap.ui.core.mvc"><MessagePage\r\n        title="{i18n>notFoundTitle}"\r\n        text="{i18n>notFoundText}"\r\n        icon="sap-icon://document"\r\n        id="page"\r\n        description=""><customDescription><Link id="link" text="{i18n>backToWorklist}" press=".onLinkPressed"/></customDescription></MessagePage></mvc:View>',
	"iot/planner/assignuserstocategories/view/Object.view.xml":'<mvc:View controllerName="iot.planner.assignuserstocategories.controller.Object"\r\n    xmlns="sap.m"\r\n    xmlns:mvc="sap.ui.core.mvc"\r\n    xmlns:semantic="sap.f.semantic"><semantic:SemanticPage id="page" headerPinnable="false" toggleHeaderOnTitleClick="false" busy="{objectView>/busy}" busyIndicatorDelay="{objectView>/delay}"><semantic:titleHeading><Title id="_IDGenTitle1" text="{title}" level="H2"/></semantic:titleHeading><semantic:headerContent><ObjectNumber id="_IDGenObjectNumber1" number="{\r\n                    path: \'hierarchyLevel\',\r\n                    formatter: \'.formatter.numberUnit\'\r\n                }" /></semantic:headerContent><semantic:sendEmailAction><semantic:SendEmailAction id="shareEmail" press=".onShareEmailPress"/></semantic:sendEmailAction></semantic:SemanticPage></mvc:View>',
	"iot/planner/assignuserstocategories/view/ObjectNotFound.view.xml":'<mvc:View controllerName="iot.planner.assignuserstocategories.controller.NotFound"\r\n    xmlns="sap.m"\r\n    xmlns:mvc="sap.ui.core.mvc"><MessagePage title="{i18n>objectTitle}" text="{i18n>noObjectFoundText}" icon="sap-icon://product" description="" id="page"><customDescription><Link id="link" text="{i18n>backToWorklist}" press=".onLinkPressed" /></customDescription></MessagePage></mvc:View>',
	"iot/planner/assignuserstocategories/view/Worklist.view.xml":'<mvc:View controllerName="iot.planner.assignuserstocategories.controller.Worklist"\r\n    xmlns="sap.m"\r\n    xmlns:core="sap.ui.core"\r\n    xmlns:t="sap.ui.table"\r\n    xmlns:mvc="sap.ui.core.mvc"\r\n    xmlns:smartFilterBar="sap.ui.comp.smartfilterbar"\r\n    xmlns:smartTable="sap.ui.comp.smarttable"\r\n    xmlns:semantic="sap.f.semantic"><Page title="{i18n>worklistTitle}"><dependents><ResponsivePopover id="editCategoryPopover" placement="Left" initialFocus="titleInput" class="sapUiContentPadding"><Input id="titleInput" value="{title}" /><customHeader><Bar><contentMiddle><Title text="{worklistView>/popoverTitle}" /></contentMiddle><contentRight><Button icon="sap-icon://decline" press="onPressClosePopover"/></contentRight></Bar></customHeader><endButton><Button text="{i18n>OK}" press="onPressSubmitCategory"/></endButton></ResponsivePopover></dependents><t:TreeTable id="treeTable" selectionMode="Multi" rowSelectionChange="onSelect" showNoData="true" rows="{path: \'/categoriesLevel0\', \r\n        sorter: {path: \'title\'},\r\n        parameters: {numberOfExpandedLevels: 4, arrayNames: [\'children\']}}" visibleRowCount="20" selectionBehavior="Row" enableBusyIndicator="true" rowActionCount="3" sort="onSort"><t:rowActionTemplate><t:RowAction><t:RowActionItem type="Custom" icon="sap-icon://add" press="onPressAddCategory"/><t:RowActionItem type="Custom" icon="sap-icon://delete" press="onPressDeleteCategory"/></t:RowAction></t:rowActionTemplate><t:extension><OverflowToolbar ><SearchField search="onSearch" width="100%" /></OverflowToolbar></t:extension><t:columns><t:Column label="{i18n>title}" width="30%"><t:template><Input value="{title}" change="onChangeCategory"/></t:template></t:Column><t:Column label="{i18n>reference}" width="10%"><t:template><Input value="{reference}" change="onChangeCategory"/></t:template></t:Column><t:Column label="{i18n>tags}" width="20%"><t:template><MultiInput tokens="{path: \'tags\', templateShareable: false}" suggestionItems="{\r\n                                    path: \'OData>/Tags\',\r\n                                    templateShareable: false,\r\n                                    sorter: { path: \'title\' }\r\n                                }" showValueHelp="false" tokenUpdate="onUpdateTags" change="onCreateToken"><suggestionItems><core:Item key="{OData>OData>title}" text="{OData>title}"/></suggestionItems><tokens><Token key="{tag_title}" text="{tag_title}" delete="onDeleteToken"/></tokens></MultiInput></t:template></t:Column><t:Column label="{i18n>members}" width="30%"><t:template><MultiInput tokens="{path: \'members\', templateShareable: false}" suggestionItems="{\r\n                                    path: \'OData>/Users\',\r\n                                    templateShareable: false,\r\n                                    sorter: { path: \'displayName\' }\r\n                                }" showValueHelp="false" tokenUpdate="onUpdateUsers2Categories"><suggestionItems><core:Item key="{OData>userPrincipalName}" text="{OData>displayName}"/></suggestionItems><tokens ><Token key="{user_userPrincipalName}" text="{displayName}" delete="onDeleteToken"/></tokens></MultiInput></t:template></t:Column></t:columns></t:TreeTable></Page></mvc:View>'
}});

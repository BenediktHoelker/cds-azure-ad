sap.ui.define(["sap/ui/model/odata/v2/ODataModel","sap/ui/model/json/JSONModel"],(t,e)=>{function a(t,e,a){return function(...s){return new Promise((r,n)=>{const o=s[a]||{};const i=[...s];i[a]={...o,success:r,error:n};t[e](...i)})}}return e.extend("iot.ODataModelV2",{constructor:function(s,...r){e.apply(this,...r);const n=new t(s);n.metadataLoaded().then(()=>{[this.schema]=n.getServiceMetadata().dataServices.schema;this.associations=this.schema.association;this.entityTypes=this.schema.entityType.map(({name:t,property:e,key:a,navigationProperty:s=[]})=>({name:t,keys:a.propertyRef.map(t=>t.name),properties:e,relations:s.map(({name:t,relationship:e,fromRole:a,toRole:s})=>{const r=this.associations.find(({name:t})=>`${this.schema.namespace}.${t}`===e);const{referentialConstraint:{dependent:n,principal:o}={dependent:{propertyRef:[]},principal:{propertyRef:[]}},end:i}=r;return{name:t,fromRole:a,toRole:s,cardinality:i.find(t=>t.role===s).multiplicity,refConstraints:n.propertyRef.map((t,e)=>{const r=o.propertyRef[e];return{from:(n.role===a?t:r).name,to:(n.role===s?t:r).name}})}})}));this.setData(this.entityTypes.map(({name:t})=>t).reduce((t,e)=>({...t,[e]:[]}),{}))});this.serviceURL=s;this.ODataModel=n;this.odata={create:a(n,"create",2),read:a(n,"read",1),query:a(n,"read",1),update:a(n,"update",2),remove:a(n,"remove",1),callFunction:a(n,"callFunction",1)}},async callFunction(...t){const e=await this.odata.callFunction(...t);return e},async read(...t){const{results:e}=await this.odata.read(...t);return e},async load(...t){const{results:e}=await this.odata.read(...t);const[a,{into:s=a,nest:r}={}]=t;if(r){const t=this.nest({items:e,...r});this.setProperty(`${s}Nested`,t)}this.setProperty(s,e);return e},nest({items:t,ID:e=null,navigationProperty:a="children",identifierName:s="ID",link:r="parent_ID"}){return t.filter(t=>t[r]===e).map(e=>({...e,[a]:this.nest({items:t,ID:e[s],navigationProperty:a,identifierName:s,link:r})}))},async create(...t){const[e,{localPath:a=`${e}/X`,...s}={}]=t;const r=await this.odata.create(e,s);const n=a.substring(0,a.lastIndexOf("/"));const o=this.getProperty(n);const i=this.removeNavPropsFrom(r);o.push({...i,...s});this.setProperty(n,o)},async update({localPath:t,...e}){const a=this.getODataPathFrom(e);const s=this.removeNavPropsFrom(e);await this.odata.update(a,s);this.setProperty(t,{...e,...s})},async remove(t){const e=`/${t.__metadata.uri.replace(location.origin,"").replace(this.serviceURL,"")}`;const a=e.split("(")[0];await this.odata.remove(e);const s=this.getProperty(a).filter(t=>!t.__metadata.uri.includes(e));this.setProperty(a,s)},getODataPathFrom(t){const e=`/${t.__metadata.uri.replace(location.origin,"").replace(this.serviceURL,"")}`;return e},removeNavPropsFrom({...t}){const e=this.getODataPathFrom(t);const a=e.split("(")[0].slice(1);const s=this.entityTypes.find(({name:t})=>t===a);s.relations.forEach(({name:e})=>{delete t[e]});return t},async metadataLoaded(){return this.ODataModel.metadataLoaded()}})});
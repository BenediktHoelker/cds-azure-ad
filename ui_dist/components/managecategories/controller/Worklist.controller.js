sap.ui.define(["./BaseController","sap/ui/model/json/JSONModel","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/model/FilterType","sap/ui/model/Sorter","sap/m/Token"],(e,t,o,s,n,r,i)=>e.extend("iot.planner.components.managecategories.controller.Worklist",{onInit(){this._aTableSearchState=[];const e=new Date;const o=new t({worklistTableTitle:this.getResourceBundle().getText("worklistTableTitle"),tableNoDataText:this.getResourceBundle().getText("tableNoDataText"),newCategory:{},busy:true,filters:{validAt:e,search:"",scope:"mine"}});this.setModel(o,"worklistView")},async onSearch(){await this._loadCategories()},async onBeforeRendering(){await this._loadCategories()},async _loadCategories(){const e=this.getModel();const t=this.getModel("worklistView");const{validAt:o,scope:s}=t.getProperty("/filters");t.setProperty("/busy",true);const{results:n}=await e.callFunction(s==="mine"?"/getMyCategoryTree":"/getCategoryTree",{urlParameters:{root:null,validAt:o.toISOString()}});const r=e.nest({items:n});e.setProperty("/Categories",r);t.setProperty("/busy",false)},onUpdateFinished(e){let t;const o=e.getSource();const s=e.getParameter("total");if(s&&o.getBinding("items").isLengthFinal()){t=this.getResourceBundle().getText("worklistTableTitleCount",[s])}else{t=this.getResourceBundle().getText("worklistTableTitle")}this.getModel("worklistView").setProperty("/worklistTableTitle",t)},onPressAddCategory(e){const t=this.getModel("worklistView");const o=this.byId("editCategoryDialog");const s=e.getSource().getParent();const{ID:n,hierarchyLevel:r,children:i}=s.getBindingContext().getObject();const a=`${s.getBindingContext().getPath()}/children/${i.length}`;this.getModel().setProperty("/newCategory",{parent_ID:n,hierarchyLevel:(parseInt(r,10)+1).toString(),localPath:a,validFrom:new Date,validTo:new Date(2024,10,30)});t.setProperty("/popoverTitle",this.getResourceBundle().getText("popoverTitle.createCategory"));o.bindElement("/newCategory");o.open(s)},async onPressUpdateCategory(e){const t=this.getModel();const o=e.getSource().getParent();const s=this.byId("editCategoryDialog");const n=o.getBindingContext().getPath();const i=o.getBindingContext().getObject();const a=t.getODataPathFrom(i);await t.load(`${a}/members`,{into:`${n}/members`,sorters:[new r("user_userPrincipalName")]});this.getModel("worklistView").setProperty("/popoverTitle",this.getResourceBundle().getText("popoverTitle.editCategory"));t.setProperty(`${n}/localPath`,n);s.bindElement(n);s.open(o)},async onChangeCategory(e){const t=e.getSource().getBindingContext().getObject();await this.getModel().update(t)},async onPressSubmitCategory(e){const t=this.getModel();const o=e.getSource();const s=o.getBindingContext().getObject();this._closePopover();if(s.ID){await t.update(s)}else{await t.create("/Categories",{...s,children:[]})}},onPressClosePopover(){this._closePopover()},_closePopover(){const e=this.byId("editCategoryDialog");this.getModel().setProperty("/newCategory",{});e.close()},onPressDeleteCategories(e){const t=e.getSource().getSelectedItems().map(e=>e.getBindingContext().getObject());t.forEach(e=>this.getModel().remove(e))},onPress(e){this._showObject(e.getSource())},onNavBack(){history.go(-1)},onRefresh(){const e=this.byId("table");e.getBinding("items").refresh()},_showObject(e){this.getRouter().navTo("object",{objectId:e.getBindingContext().getPath().substring("/Categories".length)})},_applySearch(e){const t=this.byId("table");const o=this.getModel("worklistView");t.getBinding("items").filter(e,"Application");if(e.length!==0){o.setProperty("/tableNoDataText",this.getResourceBundle().getText("worklistNoDataWithSearchText"))}},onCreateToken(e){const t=e.getSource();const{value:o}=e.getParameters();const s=new i({text:o});t.addToken(s);t.setValue();t.fireTokenUpdate({addedTokens:[s]})},onUpdateUsers2Categories(e){const t=this.getModel();const{addedTokens:o=[],removedTokens:s=[]}=e.getParameters();this._removeDuplicateTokens(e.getSource());o.forEach(e=>{const o=e.getKey();const s=e.getBindingContext().getProperty("ID");const n=`${e.getBindingContext().getPath()}/members/X`;t.create("/Users2Categories",{category_ID:s,user_userPrincipalName:o,localPath:n})});s.forEach(e=>{const o=e.getBindingContext().getObject();t.remove(o)})},_removeDuplicateTokens(e){const t=e.getTokens();const o={};t.forEach(e=>{const t=e.getText();o[t]=e});e.setTokens(Object.values(o))},onDeleteToken(e){const t=e.getSource().getBindingContext().getObject();this.getModel().remove(t)},onUpdateTags(e){const t=this.getModel();const{addedTokens:o=[],removedTokens:s=[]}=e.getParameters();this._removeDuplicateTokens(e.getSource());o.forEach(e=>{const o=e.getText();const s=e.getBindingContext().getProperty("ID");t.create("/Tags",{title:o});t.create("/Tags2Categories",{tag_title:o,category_ID:s})});s.forEach(e=>{const o=e.getBindingContext().getPath();t.remove(o)})}}));